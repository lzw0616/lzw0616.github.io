<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lzw0616.github.io</id>
    <title>Gridea</title>
    <updated>2020-07-22T20:08:40.592Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lzw0616.github.io"/>
    <link rel="self" href="https://lzw0616.github.io/atom.xml"/>
    <subtitle>好孩子的个人小博客</subtitle>
    <logo>https://lzw0616.github.io/images/avatar.png</logo>
    <icon>https://lzw0616.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[放大镜效果实现Demo]]></title>
        <id>https://lzw0616.github.io/post/fang-da-jing-xiao-guo-shi-xian-demo/</id>
        <link href="https://lzw0616.github.io/post/fang-da-jing-xiao-guo-shi-xian-demo/">
        </link>
        <updated>2020-07-22T20:00:56.000Z</updated>
        <content type="html"><![CDATA[<p>html文件：</p>
<pre><code>&lt;body&gt;
    &lt;div id=&quot;box&quot; class=&quot;box&quot;&gt;
        &lt;!-- 小层 --&gt;
        &lt;div class=&quot;small&quot;&gt;
            &lt;!-- 小图 --&gt;
            &lt;img src=&quot;../img/small.png&quot; alt=&quot;&quot; width=&quot;350&quot;&gt;
            &lt;!-- 遮挡层 --&gt;
            &lt;div class=&quot;mask&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;!-- 大层 --&gt;
        &lt;div class=&quot;big&quot;&gt;
            &lt;!-- 大图 --&gt;
            &lt;img src=&quot;../img/big.jpg&quot; alt=&quot;&quot; width=&quot;800&quot;&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
</code></pre>
<p>css文件：</p>
<pre><code>* {
            margin: 0;
            padding: 0;
        }

        .box {
            width: 350px;
            height: 350px;
            margin: 100px;
            border: 1px solid #ccc;
            position: relative;
        }

        .big {
            width: 400px;
            height: 400px;
            position: absolute;
            top: 0;
            left: 360px;
            border: 1px solid #ccc;
            overflow: hidden;
            display: none;
        }

        .mask {
            width: 175px;
            height: 175px;
            background-color: rgba(255, 255, 0, 0.4);
            position: absolute;
            left: 0;
            top: 0;
            cursor: move;
            display: none;
        }
</code></pre>
<p>js文件:</p>
<pre><code>    &lt;script&gt;
    function my$(id) {
        return document.getElementById(id);
    }
    var box = my$(&quot;box&quot;);
    var small = box.children[0];
    var mask = small.children[1];
    var big = box.children[1];
    var bigImg = big.children[0];
    box.onmouseover = function () {
        mask.style.display = 'block';
        big.style.display = 'block';
    }
    box.onmouseout = function () {
        mask.style.display = 'none';
        big.style.display = 'none';
    }
    small.onmousemove = function (e) {
        // 获取遮挡层离窗口的距离
        let x=e.clientX-mask.offsetWidth/2;
        let y=e.clientY-mask.offsetHeight/2;
        //遮挡层离父级元素的距离
        x=x-100;
        y=y-100;
        // 判断是否可以移动
        x=x&lt;0?0:x;
        y=y&lt;0?0:y;
        // 移动距离的最大值
        let xMax=small.offsetWidth-mask.offsetWidth
        let yMax=small.offsetHeight-mask.offsetHeight
        // 实际移动距离
        let moveX=x&lt;xMax?x:xMax;
        let moveY=y&lt;yMax?y:yMax;
        mask.style.left=moveX+'px';
        mask.style.top=moveY+'px';
        // 小图片和大图片移动距离关系：小图片移动距离最大值/大图片移动距离最大值=小图片移动距离/大图片移动距离
        // 大图片移动最大距离
        var  bigImgMoveX=bigImg.offsetWidth-big.offsetWidth;
        var  bigImgMoveY=bigImg.offsetHeight-big.offsetHeight;
        let bigMoveX=moveX*bigImgMoveX/xMax;
        let bigMoveY=moveY*bigImgMoveY/yMax;
        bigImg.style.marginLeft=-bigMoveX+'px';
        bigImg.style.marginTop=-bigMoveY+'px';
    }
&lt;/script&gt;
</code></pre>
<p><img src="https://lzw0616.github.io/post-images/1595448309835.png" alt="" loading="lazy"><br>
<img src="https://lzw0616.github.io/post-images/1595448319989.jpg" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[原生JS动画函数]]></title>
        <id>https://lzw0616.github.io/post/yuan-sheng-js-dong-hua-han-shu/</id>
        <link href="https://lzw0616.github.io/post/yuan-sheng-js-dong-hua-han-shu/">
        </link>
        <updated>2020-05-31T08:43:04.000Z</updated>
        <summary type="html"><![CDATA[<p>function animate(element,target){<br>
clearInterval(element.timerId);<br>
element.timerId=setInterval(function(){<br>
var current=element.offsetLeft;<br>
var step=10;<br>
step=target&gt;current?step:-step;<br>
current+=step;<br>
if(Math.abs(target-current)&gt;Math.abs(step)){<br>
element.style.left=current+'px';<br>
}else{<br>
element.style.left=target+'px';<br>
}<br>
},20);</p>
<pre><code>}
实现思路如下：
设置一个定时器，使元素element每隔20ms移动step距离,如果目标位置与当前位置相差的距离大于每次移动距离，则继续移动，否则直接设置当前位置为目标位置
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<p>function animate(element,target){<br>
clearInterval(element.timerId);<br>
element.timerId=setInterval(function(){<br>
var current=element.offsetLeft;<br>
var step=10;<br>
step=target&gt;current?step:-step;<br>
current+=step;<br>
if(Math.abs(target-current)&gt;Math.abs(step)){<br>
element.style.left=current+'px';<br>
}else{<br>
element.style.left=target+'px';<br>
}<br>
},20);</p>
<pre><code>}
实现思路如下：
设置一个定时器，使元素element每隔20ms移动step距离,如果目标位置与当前位置相差的距离大于每次移动距离，则继续移动，否则直接设置当前位置为目标位置
</code></pre>
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[30天自制操作系统第一天]]></title>
        <id>https://lzw0616.github.io/post/30-tian-zi-zhi-cao-zuo-xi-tong-di-yi-tian/</id>
        <link href="https://lzw0616.github.io/post/30-tian-zi-zhi-cao-zuo-xi-tong-di-yi-tian/">
        </link>
        <updated>2020-05-21T09:38:25.000Z</updated>
        <content type="html"><![CDATA[<p>下载软件二进制编辑器binary Editor。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[JS判断日期是一年中的某一天]]></title>
        <id>https://lzw0616.github.io/post/js-pan-duan-ri-qi-shi-yi-nian-zhong-de-mou-yi-tian-md/</id>
        <link href="https://lzw0616.github.io/post/js-pan-duan-ri-qi-shi-yi-nian-zhong-de-mou-yi-tian-md/">
        </link>
        <updated>2020-04-27T13:45:00.000Z</updated>
        <content type="html"><![CDATA[<pre><code> // 方法一：使用数组
        function judgeDay() {
            var sum = 0; //要返回的结果
            var Date1 = new Date();
            var arr = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            var year = Date1.getFullYear();
            var month = Date1.getMonth();
            var day = Date1.getDate();
            for (var i = 0; i &lt; month + 1; i++) {
                sum += arr[i];
            }
            if (judgeYear(year)) {
                sum++;
            }
            sum += day;
            return sum;
        }


        function judgeYear(year) {
            if ((year % 4 == 0 &amp;&amp; year % 100 != 0) || year % 400 == 0) {
                return true;
            }
            return false;
        }
        
        ```
         // 方法二：使用switch
        function switchJudge() {
            var sum = 0; //要返回的结果
            var Date1 = new Date();
            var year = Date1.getFullYear();
            var month = Date1.getMonth() + 1;
            var day = Date1.getDate();
            switch (month) {
                case 12:
                    sum += 31;
                case 11:
                    sum += 30;
                case 10:
                    sum += 31;
                case 9:
                    sum += 30;
                case 8:
                    sum += 31;
                case 7:
                    sum += 31;
                case 6:
                    sum += 30;
                case 5:
                    sum += 31;
                case 4:
                    sum += 30;
                case 3:
                    sum += 31;
                case 2:
                    sum += 28;
                case 1:
                    sum += 31;
                default:
                    if (judgeYear(year)) {
                        sum++
                    }
                    break;

            }
            sum += day;
            return sum;
        }</code></pre>
]]></content>
    </entry>
</feed>